<UserControl x:Class="GroupMeClient.WpfUI.Views.Controls.SendImageControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:gif="clr-namespace:XamlAnimatedGif;assembly=XamlAnimatedGif"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:extensions="clr-namespace:GroupMeClient.WpfUI.Extensions"
             mc:Ignorable="d" 
             d:DesignHeight="200" d:DesignWidth="200"
             Background="Black"
             FocusManager.FocusedElement="{Binding ElementName=ImageMessageCaption}">

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!--Add Image Button-->
        <Button Style="{StaticResource PopupDialogButton}"
                Margin="0,-30,0,0"
                Command="{Binding AddImage}"
                extensions:EventButtonFocusExtensions.ElementToFocus="{Binding ElementName=ImageMessageCaption}">
            <iconPacks:PackIconEntypo Width="15" Height="15" Kind="Plus" />
        </Button>

        <!--Delete Image Button-->
        <Button Margin="30,-30,0,0"
                Command="{Binding DeleteImage}"
                extensions:EventButtonFocusExtensions.ElementToFocus="{Binding ElementName=ImageMessageCaption}">
            <iconPacks:FontAwesome Width="15" Height="15" Kind="TrashAltSolid" />
            
            <Button.Style>
                <Style TargetType="Button" BasedOn="{StaticResource PopupDialogButton}">
                    <Setter Property="Visibility" Value="Visible"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.ImagesCollection.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>

        <TabControl Grid.Row="0"
                    SelectedIndex="0"
                    SelectedItem="{Binding SelectedImage, Mode=TwoWay}"
                    Padding="0"
                    AlternationCount="10000"
                    BorderThickness="0"
                    Background="Black"
                    ItemsSource="{Binding ImagesCollection}">

            <TabControl.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding 
                                        Path=(ItemsControl.AlternationIndex), 
                                        StringFormat=Image {0},
                                        Converter={StaticResource plusOneConverter},
                                        RelativeSource={RelativeSource AncestorType=TabItem, Mode=FindAncestor}}"
                               FontSize="14"
                               Foreground="White"/>
                </DataTemplate>
            </TabControl.ItemTemplate>

            <TabControl.ContentTemplate>
                <DataTemplate>
                    <Grid>
                        <Image MaxWidth="900" 
                               Stretch="Uniform"
                               StretchDirection="DownOnly"
                               HorizontalAlignment="Center"
                               gif:AnimationBehavior.SourceStream="{Binding ImageStream}" />

                        <Button Content="Select or Paste an Image"
                                Visibility="{Binding ImageStream, Converter={StaticResource inverseNullToVisibilityConverter}}"
                                Command="{Binding SelectImageFile}"/>
                    </Grid>
                </DataTemplate>
            </TabControl.ContentTemplate>

            <TabControl.ItemContainerStyle>
                <Style TargetType="{x:Type TabItem}" BasedOn="{StaticResource MahApps.Styles.TabItem}">
                    <Setter Property="Visibility" Value="Visible"/>

                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DataContext.ImagesCollection.Count, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=UserControl}}" Value="1">
                            <Setter Property="Visibility" Value="Collapsed" />
                        </DataTrigger>

                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#ABABAB" />
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </TabControl.ItemContainerStyle>
        </TabControl>

        <Controls:MetroProgressBar Grid.Row="0"
                                   HorizontalAlignment="Stretch"
                                   VerticalAlignment="Bottom"
                                   Value="{Binding UploadPercentage, Mode=OneWay}"
                                   Foreground="{DynamicResource MessageTheyLikedBrush}"
                                   Opacity="0.8"
                                   Visibility="{Binding UploadPercentage, Converter={StaticResource inverseZeroToVisibilityConverter}}"
                                   Height="13" />

        <Controls:ProgressRing 
            Grid.Row="0"
            IsActive="{Binding IsSending}"
            Width="60" Height="60"
            HorizontalAlignment="Center"/>

        <Grid Grid.Column="0" Grid.Row="1"
              Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" MinHeight="50"/>
            </Grid.RowDefinitions>

            <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4"
                    BorderBrush="{DynamicResource DividerLineBrush}" BorderThickness="0,0,0,1"
                    Height="4"
                    Margin="0,0,0,0"
                    VerticalAlignment="Bottom"/>

            <extensions:MultiLineSendBox
                x:Name="ImageMessageCaption"
                Style="{StaticResource GroupMeClient.Wpf.Styles.SendTextBox}"
                Grid.Row="1" Grid.Column="1"
                extensions:FileDragDropPasteHelper.IsFileDragDropPasteEnabled="True"
                extensions:FileDragDropPasteHelper.FileDragDropPasteTarget="{Binding}"
                Text="{Binding Path=TypedMessageContents, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="Send">
                        <behaviors:InvokeCommandAction Command="{Binding Path=SendButtonClicked}"/>
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>

            </extensions:MultiLineSendBox>

            <Button Grid.Row="1" Grid.Column="2"
                    Width="35" Height="35"
                    Margin="0,0,30,0"
                    HorizontalAlignment="Right"
                    BorderThickness="0"
                    Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                    Command="{Binding Path=SendButtonClicked}">
                <Button.ContentTemplate>
                    <DataTemplate>
                        <iconPacks:PackIconMaterial Width="15" Height="15" Foreground="{DynamicResource ButtonGlyphBrush}" Kind="Send"/>
                    </DataTemplate>
                </Button.ContentTemplate>
            </Button>
        </Grid>
    </Grid>
</UserControl>