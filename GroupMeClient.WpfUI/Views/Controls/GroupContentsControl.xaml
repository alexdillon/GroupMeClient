<UserControl x:Class="GroupMeClient.WpfUI.Views.Controls.GroupContentsControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:controls="clr-namespace:GroupMeClient.WpfUI.Views.Controls"
             xmlns:extensions="clr-namespace:GroupMeClient.WpfUI.Extensions"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             mc:Ignorable="d"
             d:DesignHeight="700" d:DesignWidth="500">

    <UserControl.Resources>
        <Style x:Key="bottomBarButtonStyle" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}" TargetType="Button">
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="HorizontalAlignment" Value="Center" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Height" Value="25" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="{DynamicResource DividerLineBrush}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Padding" Value="0" />
            
            <Style.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="{DynamicResource MahApps.Brushes.Text}" />
                    <Setter Property="Opacity" Value="0.80" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="7"/>
            <!--Padding-->
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <!--Top Bar-->
        <Grid Grid.Column="0" Grid.Row="0" Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="50"/>
            </Grid.RowDefinitions>

            <!--Top Bar Avatar-->
            <controls:AvatarControl 
                Grid.Column="0"
                Width="40" Height="40"
                Margin="10,0,10,0"
                DataContext="{Binding TopBarAvatar}">

                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="MouseRightButtonUp" >
                        <behaviors:InvokeCommandAction Command="{Binding Path=DataContext.ToggleDisplayOptions, RelativeSource={RelativeSource AncestorType=controls:GroupContentsControl}}" />
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
            </controls:AvatarControl>

            <!--Group Name and Plugins Drop Down Menu Button-->
            <ToggleButton Style="{StaticResource GroupMeClient.Wpf.Styles.GroupNameDropdown}"
                          Grid.Column="1"
                          Tag="{Binding Title}"
                          IsChecked="{Binding ShowPluginOptions}"
                          x:Name="toggleGroupOptionsButton"/>

            <!--Close Group Button-->
            <!--Shown only in Regular Chat Mode-->
            <Button Grid.Column="2"
                    HorizontalAlignment="Right"
                    Width="35" Height="35"
                    BorderThickness="0"
                    Command="{Binding Path=CloseGroup}"
                    CommandParameter="{Binding Path=.}">
                <iconPacks:PackIconOcticons Width="15" Height="15" Foreground="#637182" Kind="X"/>

                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
                        <Setter Property="Visibility" Value="Collapsed" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsFullGMDC}" Value="True">
                                <!--Only show the close button in regular (docked in GMDC) mode.-->
                                <!--Don't show the close button when in MiniChat Mode-->
                                <!--All it would do is close the copy in the main UI. The Windows X button
                                is the intended close mechanism in MiniChat mode-->
                                <Setter Property="Visibility" Value="Visible" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
                
            </Button>

            <!--Refresh Group Button-->
            <!--Shown only in MiniChat Mode-->
            <Button Grid.Column="2"
                    HorizontalAlignment="Right"
                    Width="35" Height="35"
                    Background="Transparent"
                    BorderThickness="0"
                    Command="{Binding GlobalRefreshAllCommand}">
                <iconPacks:PackIconMaterial Width="17" Height="17"  Kind="Refresh"/>

                <Button.Style>
                    <Style TargetType="Button" BasedOn="{StaticResource bottomBarButtonStyle}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsFullGMDC}" Value="True">
                                <!--Only show the refresh button in MiniChat mode.-->
                                <Setter Property="Visibility" Value="Collapsed" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Button.Style>
            </Button>

            <!--Top Bar Underline-->
            <Border Grid.Column="0" Grid.ColumnSpan="3" Grid.Row="0" BorderBrush="#637182" BorderThickness="0,0,0,1"/>
        </Grid>

        <!--Messages List-->
        <extensions:ListBoxWithPosition
            ItemsSource="{Binding MessagesSorted}"
            Grid.Row="2" Grid.Column="0"
            BorderThickness="0"
            Background="{DynamicResource MahApps.Brushes.Control.Background}"
            UseLayoutRounding="True"
            SelectionMode="Multiple"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled"
            ScrollViewer.CanContentScroll="True" 
            ScrollViewer.PanningMode="VerticalOnly" 
            VirtualizingStackPanel.IsVirtualizing="True"
            VirtualizingStackPanel.VirtualizationMode="Standard"
            VirtualizingStackPanel.ScrollUnit="Pixel"
            extensions:ListBoxExtensions.AutoScrollToEnd="True"
            extensions:ListBoxExtensions.ScrollToTop="{Binding ReloadView}"
            AllowDrop="True"
            extensions:FileDragDropPasteHelper.IsFileDragDropPasteEnabled="True"
            extensions:FileDragDropPasteHelper.FileDragDropPasteTarget="{Binding}"
            x:Name="messagesList">

            <ListBox.LayoutTransform>
                <ScaleTransform ScaleX="{Binding ScalingFactor}" ScaleY="{Binding ScalingFactor}" />
            </ListBox.LayoutTransform>

            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="HorizontalContentAlignment" Value="Left"/>
                    <Setter Property="VerticalContentAlignment" Value="Top"/>
                    <Setter Property="Focusable" Value="{Binding Path=DataContext.IsSelectionAllowed, RelativeSource={RelativeSource AncestorType=controls:GroupContentsControl}}"/>

                    <!--Sometimes, the ListBoxItem will not adjust when multiple chats are rapidly opened. Bind the width to solve it.-->
                    <Setter Property="Width" Value="{Binding Path=ViewportWidth, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ScrollViewer}}"/>

                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <Border BorderThickness="0"
                                        x:Name="highlightBorder"
                                        Margin="0" >
                                    <ContentPresenter SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"
                                                      Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:GroupContentsControl}}}">
                                        <ContentPresenter.ContextMenu>
                                            <ContextMenu>
                                                <MenuItem Header="Reply To Message" 
                                                          Command="{Binding PlacementTarget.Tag.DataContext.InitiateReply, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                          CommandParameter="{Binding .}"/>
                                                <Separator />
                                                
                                                <MenuItem Header="Hide Message" 
                                                          Command="{Binding PlacementTarget.Tag.DataContext.HideMessage, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=ContextMenu}}"
                                                          CommandParameter="{Binding .}"/>
                                            </ContextMenu>
                                        </ContentPresenter.ContextMenu>
                                    </ContentPresenter>
                                </Border>

                                <ControlTemplate.Triggers>
                                    <Trigger Property="IsSelected" Value="true">
                                        <Setter TargetName="highlightBorder" Property="BorderThickness" Value="3"/>
                                        <Setter TargetName="highlightBorder" Property="BorderBrush" Value="#1873BA"/>
                                    </Trigger>
                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>

            <behaviors:Interaction.Triggers>
                <behaviors:EventTrigger EventName="SelectionChanged">
                    <behaviors:InvokeCommandAction Command="{Binding DataContext.SelectionChangedCommand, RelativeSource={RelativeSource AncestorType=controls:GroupContentsControl}}"
                                                   CommandParameter="{Binding SelectedItems, ElementName=messagesList}" />
                </behaviors:EventTrigger>
            </behaviors:Interaction.Triggers>
        </extensions:ListBoxWithPosition>

        <!--Scroll-To-Bottom Button-->
        <Button Grid.Row="2"
                Style="{DynamicResource MahApps.Styles.Button.Circle}"
                HorizontalAlignment="Right"
                VerticalAlignment="Bottom"
                Margin="0,0,30,20"
                Background="{DynamicResource ScrollToBottomButtonBrush}"
                BorderBrush="{DynamicResource ScrollToBottomButtonBrush}"
                Visibility="{Binding IsNotAtBottom, ElementName=messagesList, Converter={StaticResource boolToVisibilityConverter}}"
                Command="{Binding ElementName=messagesList, Path=ScrollToEnd}">
            <Button.Content>
                <iconPacks:PackIconMaterial 
                    Kind="ArrowDown"
                    Width="17"
                    Height="17"
                    Foreground="White"
                    VerticalAlignment="Center"
                    HorizontalAlignment="Center"
                    Margin="10"/>
            </Button.Content>
        </Button>

        <!--Plugins Dropdown List-->
        <Border Grid.Row="2"
                Visibility="{Binding IsChecked, ElementName=toggleGroupOptionsButton, Converter={StaticResource boolToVisibilityConverter}}"
                VerticalAlignment="Top"
                BorderThickness="20,10,20,30"
                BorderBrush="{DynamicResource PluginMenuBrush}">
            <ItemsControl ItemsSource="{Binding GroupChatPlugins}" Background="{DynamicResource PluginMenuBrush}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button 
                            Content="{Binding PluginName}"
                            Command="{Binding RelativeSource={RelativeSource FindAncestor, 
                                        AncestorType={x:Type controls:GroupContentsControl}}, Path=DataContext.GroupChatPluginActivated}"
                            CommandParameter="{Binding Path=.}"
                            HorizontalContentAlignment="Left"
                            Foreground="{DynamicResource PluginButtonFontBrush}" 
                            BorderThickness="0"
                            FontSize="14"
                            FontWeight="SemiBold"
                            Margin="5" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
        </Border>

        <!--Display Options-->
        <Border Grid.Row="2"
                Visibility="{Binding ShowDisplayOptions, Converter={StaticResource boolToVisibilityConverter}}"
                VerticalAlignment="Top"
                BorderThickness="20,10,20,30"
                BorderBrush="{DynamicResource PluginMenuBrush}">

            <StackPanel Background="{DynamicResource PluginMenuBrush}" >
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>
                    
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <TextBlock Text="{Binding ScalingFactor, StringFormat='Zoom {0:0.00}x'}" Padding="0,0,15,0" Grid.Row="0" Grid.Column="0" Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}" />
                    <Slider Minimum="0.50" Maximum="1.50" Value="{Binding ScalingFactor, Mode=TwoWay}" TickPlacement="BottomRight" TickFrequency="0.10" Grid.Row="0" Grid.Column="1" />
                </Grid>

                <Button 
                    Content="MiniChat"
                    Command="{Binding ShowMiniChat}"
                    HorizontalContentAlignment="Left"
                    Foreground="{DynamicResource PluginButtonFontBrush}" 
                    BorderThickness="0"
                    FontSize="14"
                    FontWeight="SemiBold"
                    Margin="5,20,0,0">
                    <Button.Style>
                        <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Visibility" Value="Collapsed" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsFullGMDC}" Value="True">
                                    <Setter Property="Visibility" Value="Visible" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <mah:ToggleSwitch 
                    Content="Show Top Most"
                    HorizontalContentAlignment="Left"
                    Foreground="{DynamicResource MahApps.Brushes.ThemeForeground}"
                    IsOn="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=Topmost}"
                    BorderThickness="0"
                    FontSize="14"
                    FontWeight="SemiBold"
                    Margin="5,20,0,0">
                    <mah:ToggleSwitch.Style>
                        <Style TargetType="mah:ToggleSwitch" BasedOn="{StaticResource {x:Type mah:ToggleSwitch}}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=DataContext.IsFullGMDC}" Value="True">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </mah:ToggleSwitch.Style>
                </mah:ToggleSwitch>
            </StackPanel>
        </Border>

        <!--Send Message Bar-->
        <Grid Grid.Row="3"
              Background="{DynamicResource MahApps.Brushes.Control.Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="40" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto" MinHeight="50"/>
            </Grid.RowDefinitions>

            <!--Send Bar Top Line-->
            <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="4"
                    BorderBrush="{DynamicResource DividerLineBrush}" BorderThickness="0,0,0,1"
                    Height="4"
                    Margin="0,0,0,0"
                    VerticalAlignment="Bottom"/>

            <!--Box showing the message that is being replied to-->
            <Grid Grid.Column="1" 
                  HorizontalAlignment="Stretch" 
                  MaxHeight="100" 
                  Visibility="{Binding MessageBeingRepliedTo, Converter={StaticResource nullToVisibilityConverter}, ConverterParameter={StaticResource True}}"
                  Background="{DynamicResource MahApps.Brushes.Control.Background}">
          
                <Border CornerRadius="2" BorderBrush="#637182" BorderThickness="2,2,2,0">
                    <Border CornerRadius="3" BorderBrush="{DynamicResource InProgressReplyBrush}" Margin="5,5,5,3" BorderThickness="2,2,2,2">
                        <UserControl Content="{Binding MessageBeingRepliedTo}"
                                         Background="{DynamicResource InProgressReplyBrush}"/>
                    </Border>
                </Border>

                <Button HorizontalAlignment="Right"
                        Width="35" Height="35"
                        BorderThickness="0"
                        Style="{StaticResource {x:Static ToolBar.ButtonStyleKey}}"
                        Command="{Binding TerminateReply}"
                        CommandParameter="{Binding Path=.}">
                    <iconPacks:PackIconOcticons Width="15" Height="15" Foreground="#637182" Kind="X"/>
                </Button>
            </Grid>

            <!--Message Effects Button-->
            <Button Grid.Row="1" Grid.Column="0"
                    Style="{StaticResource bottomBarButtonStyle}"
                    Background="Transparent"
                    Margin="0"
                    Command="{Binding OpenMessageSuggestions}" >

                <iconPacks:PackIconMaterial Kind="React" Width="15" Height="15" />
            </Button>

            <!--Message Text Box-->
            <extensions:MultiLineSendBox
                Grid.Row="1" Grid.Column="1"
                Style="{StaticResource GroupMeClient.Wpf.Styles.SendTextBox}"
                IsReadOnly="{Binding IsSending}"
                extensions:FileDragDropPasteHelper.IsFileDragDropPasteEnabled="True"
                extensions:FileDragDropPasteHelper.FileDragDropPasteTarget="{Binding}"
                Text="{Binding Path=TypedMessageContents, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                x:Name="sendBox">

                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="Send">
                        <behaviors:InvokeCommandAction Command="{Binding Path=SendMessage}"/>
                    </behaviors:EventTrigger>

                    <behaviors:DataTrigger Binding="{Binding MessageBeingRepliedTo}" 
                                           Value="{x:Null}"
                                           Comparison="NotEqual">
                        <extensions:SetFocusBehavior TargetObject="{Binding ElementName=sendBox}" />
                    </behaviors:DataTrigger>
                </behaviors:Interaction.Triggers>
            </extensions:MultiLineSendBox>

            <!--Plus Button-->
            <Button Grid.Row="1" Grid.Column="2"
                    Style="{StaticResource bottomBarButtonStyle}"
                    Background="Transparent"
                    Margin="0,0,10,0"
                    Command="{Binding SendAttachment}" >

                <iconPacks:PackIconMaterial Kind="Plus" Width="15" Height="15" />
            </Button>

            <!--Send Message Button-->
            <Button Grid.Row="1" Grid.Column="3"
                    Style="{StaticResource bottomBarButtonStyle}"
                    Background="Transparent"
                    Margin="0,0,24,0"
                    Command="{Binding SendMessage}" >

                <iconPacks:PackIconMaterial Kind="Send" Width="15" Height="15" />
            </Button>
        </Grid>

        <!--Popup Dialog-->
        <controls:Popup Grid.RowSpan="4"
                        Grid.ColumnSpan="1"
                        DataContext="{Binding SmallDialogManager}" />
    </Grid>
</UserControl>