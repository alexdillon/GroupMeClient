<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
                    xmlns:controls="clr-namespace:GroupMeClient.WpfUI.Views.Controls"
                    xmlns:behaviors="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:extensions="clr-namespace:GroupMeClient.WpfUI.Extensions">

    <sys:Int32 x:Key="collapseNestLevel">1</sys:Int32>

    <DataTemplate x:Key="MessageBody">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="55" />
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="10"/>
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.Style>
                <Style TargetType="{x:Type Grid}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding DidISendItColoring, Mode=OneTime}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource MessageISentBackdropBrush}" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding DidISendItColoring, Mode=OneTime}" Value="False">
                            <Setter Property="Background" Value="{DynamicResource MessageTheySentBackdropBrush}" />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>

            <controls:AvatarControl 
                    Grid.Column="0" Grid.Row="1"
                    Width="40" Height="40" VerticalAlignment="Top"
                    DataContext="{Binding Avatar, Mode=OneTime}"
                    ContextMenu="{StaticResource emptyContextMenu}">

                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="MouseRightButtonUp" >
                        <behaviors:InvokeCommandAction Command="{Binding Path=DataContext.ToggleMessageDetails, RelativeSource={RelativeSource AncestorType=controls:MessageControl}}" />
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>
            </controls:AvatarControl>

            <StackPanel Grid.Column="1" Grid.Row="1">
                <TextBlock Text="{Binding Sender, Mode=OneTime}" FontSize="12" Foreground="{DynamicResource DividerLineBrush}" />

                <ContentControl Content="{Binding RepliedMessage}" 
                                HorizontalAlignment="Left"
                                Margin="0,0,10,10" 
                                Visibility="{Binding RepliedMessage, Converter={StaticResource nullToVisibilityConverter}, ConverterParameter={StaticResource True}}" />

                <ItemsControl ItemsSource="{Binding AttachedItems}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <UserControl HorizontalAlignment="Left"
                                         Content="{Binding .}"
                                         MaxWidth="700" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>

                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>

                <extensions:SelectableTextBlock 
                        Padding="0"
                        Margin="0,0,0,20"
                        FontSize="15"
                        TextWrapping="Wrap" 
                        extensions:TextBlockExtensions.InlineList="{Binding Inlines, Converter={StaticResource inlineConverter}, Mode=OneWay}">

                    <extensions:SelectableTextBlock.ContextMenu>
                        <ContextMenu>
                            <ContextMenu.Items>
                                <MenuItem Command="ApplicationCommands.Copy" />
                            </ContextMenu.Items>
                        </ContextMenu>
                    </extensions:SelectableTextBlock.ContextMenu>
                </extensions:SelectableTextBlock>
            </StackPanel>

            <!--Hidden Message Indicator-->
            <iconPacks:PackIconOcticons Width="15" Height="15"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        VerticalAlignment="Top"
                                        Margin="0,17,10,0"
                                        HorizontalAlignment="Center"
                                        Kind="X"
                                        Visibility="{Binding IsMessageHidden, Converter={StaticResource boolToVisibilityConverter}}"
                                        Foreground="Red"
                                        Background="Transparent">
                <iconPacks:PackIconOcticons.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding DeHideAction}"
                                      Visibility="{Binding IsMessageHidden, Converter={StaticResource boolToVisibilityConverter}}"
                                      Header="De-Hide Message" />
                    </ContextMenu>
                </iconPacks:PackIconOcticons.ContextMenu>
            </iconPacks:PackIconOcticons>

            <!--Starred Message Indicator-->
            <iconPacks:PackIconFontAwesome Width="18" Height="18"
                                               Grid.Row="1"
                                               Grid.Column="3"
                                               VerticalAlignment="Top"
                                               Margin="0,13,10,0"
                                               HorizontalAlignment="Center"
                                               Kind="StarSolid"
                                               Visibility="{Binding IsMessageStarred, Converter={StaticResource boolToVisibilityConverter}}"
                                               Foreground="{DynamicResource SidebarBrush}"
                                               Background="Transparent" >
                <iconPacks:PackIconFontAwesome.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding StarAction}"
                                      Visibility="{Binding IsMessageStarred, Converter={StaticResource inverseBooleanToVisibilityConverter}}"
                                      Header="Star Message" />

                        <MenuItem Command="{Binding StarAction}"
                                      Visibility="{Binding IsMessageStarred, Converter={StaticResource boolToVisibilityConverter}}"
                                      Header="Un-Star Message" />
                    </ContextMenu>
                </iconPacks:PackIconFontAwesome.ContextMenu>
            </iconPacks:PackIconFontAwesome>

            <!--Like Button-->
            <Grid Grid.Column="4" Grid.Row="1" 
                      MaxHeight="60"
                      VerticalAlignment="Top"
                      Background="Transparent"
                      Visibility="{Binding ShowLikers, Converter={StaticResource nullToVisibilityConverter}, ConverterParameter={StaticResource True}}"
                      x:Name="likeButtonArea">
                <Grid.RowDefinitions>
                    <RowDefinition Height="15" />
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="10" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3"/>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="12"/>
                </Grid.ColumnDefinitions>
                <iconPacks:PackIconFontAwesome Width="17" Height="17"
                                                   Grid.Row="1"
                                                   Grid.Column="1"
                                                   HorizontalAlignment="Center"
                                                   Kind="{Binding LikeStatus, Converter={StaticResource likeStatusToIcon}}"
                                                   Background="Transparent">
                    <iconPacks:PackIconFontAwesome.Style>
                        <Style TargetType="{x:Type iconPacks:PackIconFontAwesome}">
                            <Setter Property="Foreground" Value="{DynamicResource MessageTheyLikedBrush}" />

                            <Style.Triggers>
                                <DataTrigger Binding="{Binding LikeStatus, Converter={StaticResource likeStatusToBool}}" Value="True">
                                    <Setter Property="Foreground" Value="{DynamicResource MessageILikedBrush}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </iconPacks:PackIconFontAwesome.Style>
                </iconPacks:PackIconFontAwesome>

                <TextBlock
                        Grid.Row="1"
                        Grid.Column="1"
                        Padding="0,17,0,0"
                        HorizontalAlignment="Center" 
                        Foreground="{DynamicResource MessageFontBrush}" FontSize="10" FontWeight="Thin"
                        Text="{Binding LikeCount}" />

                <behaviors:Interaction.Triggers>
                    <extensions:NotRightClickTrigger >
                        <behaviors:InvokeCommandAction Command="{Binding LikeAction}" />
                    </extensions:NotRightClickTrigger>
                </behaviors:Interaction.Triggers>

                <Grid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Command="{Binding StarAction}"
                                      Visibility="{Binding IsMessageStarred, Converter={StaticResource inverseBooleanToVisibilityConverter}}"
                                      Header="Star Message" />

                        <MenuItem Command="{Binding StarAction}"
                                      Visibility="{Binding IsMessageStarred, Converter={StaticResource boolToVisibilityConverter}}"
                                      Header="Un-Star Message" />
                    </ContextMenu>
                </Grid.ContextMenu>
            </Grid>

            <Canvas x:Name="likesCanvas"
                        Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="5" Margin="0,-45,16,0"
                        Background="Transparent">

                <!--Use a trigger to change the visibility of the liker's popup area-->
                <Canvas.Style>
                    <Style TargetType="{x:Type Canvas}">
                        <Setter Property="Visibility" Value="Visible" />
                        <Style.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding Path=LikeCount, Converter={StaticResource isZeroConverter}}" Value="True" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Collapsed" />
                            </MultiDataTrigger>

                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, ElementName=likeButtonArea}" Value="False" />
                                    <Condition Binding="{Binding IsMouseOver, ElementName=likesCanvas}" Value="False" />
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Visibility" Value="Hidden" />
                            </MultiDataTrigger>
                        </Style.Triggers>
                    </Style>
                </Canvas.Style>

                <Grid Width="{Binding ActualWidth, ElementName=likesCanvas}">
                    <Border BorderThickness="1" CornerRadius="5" 
                                BorderBrush="{DynamicResource DividerLineBrush}" Background="{DynamicResource LikerAreaBackgroundBrush}"
                                Width="Auto" Height="65" HorizontalAlignment="Right">

                        <ItemsControl Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                                          Margin="7"
                                          VirtualizingStackPanel.IsVirtualizing="True"
                                          VirtualizingStackPanel.ScrollUnit="Pixel"
                                          ScrollViewer.CanContentScroll="True">

                            <ItemsControl.Style>
                                <Style TargetType="{x:Type ItemsControl}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Visibility, ElementName=likesCanvas}" Value="Visible">
                                            <Setter Property="ItemsSource" Value="{Binding Path=LikedByAvatars}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ItemsControl.Style>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <ContentControl Content="{Binding Avatar}" 
                                                        Width="35" Height="35" 
                                                        Margin="3,0,3,0" 
                                                        ToolTip="{Binding Name}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>

                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <VirtualizingStackPanel 
                                            Orientation="Horizontal"
                                            VirtualizationMode="Recycling" />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                        </ItemsControl>
                    </Border>
                </Grid>
            </Canvas>

            <!--Message Right-Click Details-->
            <StackPanel Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="5"
                        Orientation="Vertical"
                        Background="{DynamicResource MessageDetailsBrush}"
                        Height="45"
                        ContextMenu="{StaticResource emptyContextMenu}"
                        Visibility="{Binding ShowDetails, Converter={StaticResource boolToVisibilityConverter}}">

                <behaviors:Interaction.Triggers>
                    <behaviors:EventTrigger EventName="MouseRightButtonUp" >
                        <behaviors:InvokeCommandAction Command="{Binding Path=DataContext.ToggleMessageDetails, RelativeSource={RelativeSource AncestorType=controls:MessageControl}}" />
                    </behaviors:EventTrigger>
                </behaviors:Interaction.Triggers>

                <TextBlock Text="{Binding SentTimeString, StringFormat=Sent {0}, Mode=OneTime}"
                               FontWeight="Regular"
                               FontSize="11"
                               Foreground="{DynamicResource MessageFontBrush}"
                               Padding="20,0,0,0"/>

                <TextBlock Text="{Binding SenderPlatform, StringFormat=Client: {0}, Mode=OneTime}"
                               FontWeight="Regular"
                               FontSize="11"
                               Foreground="{DynamicResource MessageFontBrush}"
                               Padding="20,0,0,0"/>
            </StackPanel>

            <Button Grid.Row="3"
                    Grid.Column="0"
                    Grid.ColumnSpan="5"
                    HorizontalAlignment="Right"
                    Visibility="{Binding ShowDetails, Converter={StaticResource boolToVisibilityConverter}}"
                    Command="{Binding ToggleMarkdown}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="NestedWithDropDown" >
        <Expander IsExpanded="{Binding NestLevel, Mode=OneWay, FallbackValue={StaticResource True}, Converter={StaticResource isDeeplyNestedConverter}, ConverterParameter={StaticResource collapseNestLevel}}"
                      Content="{Binding}"
                      ContentTemplate="{StaticResource MessageBody}">

            <Expander.Style>
                <Style TargetType="Expander">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding Path=Name}" Value="{x:Null}">
                            <Setter Property="Header" Value="..." />
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Expander.Style>
        </Expander>
    </DataTemplate>

    <DataTemplate x:Key="TopLevelNoDropDown">
        <ContentPresenter Content="{Binding}" ContentTemplate="{StaticResource MessageBody}"/>
    </DataTemplate>
</ResourceDictionary>